# Generated by Django 2.0.3 on 2018-04-10 14:46

import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agencyMessage', models.TextField(blank=True, null=True, verbose_name='中介留言')),
                ('workerMessage', models.TextField(blank=True, null=True, verbose_name='编写员留言')),
                ('isMaterialEnough', models.BooleanField(default=False, verbose_name='中介材料齐全度')),
                ('projectStatus', models.CharField(blank=True, choices=[(None, '无'), ('receivedInfo', '收到资料'), ('reportEdit', '报告编写'), ('InfoComplete', '资质材料完善'), ('submit', '入件'), ('investigate', '审批修改'), ('takeEvidence', '取证')], max_length=255, null=True, verbose_name='项目状态')),
                ('projectName', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='项目名称')),
                ('createTime', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('updateTime', models.DateField(auto_now=True, verbose_name='更新时间')),
                ('projectType', models.CharField(blank=True, choices=[(None, '无'), ('newBuilt', '新建'), ('extension', '扩建'), ('removal', '搬迁')], max_length=255, null=True, verbose_name='项目性质')),
                ('constructionCompanyName', models.CharField(blank=True, max_length=255, null=True, verbose_name='建设单位名称')),
                ('nameAbbreviation', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称缩写')),
                ('NEIType', models.CharField(blank=True, default='[]', max_length=255, null=True, verbose_name='国民经济行业类别及代码')),
                ('environmentalEffectclassification', models.CharField(blank=True, default='[]', max_length=255, null=True, verbose_name='环境影响评价行业类别')),
                ('EAcompanyName', models.CharField(blank=True, max_length=255, null=True, verbose_name='环评公司名称')),
                ('EAcompanyCertificatenumber', models.CharField(blank=True, max_length=255, null=True, verbose_name='环评单位证书编号')),
                ('EAcompanyTelephone', models.CharField(blank=True, max_length=255, null=True, verbose_name='环评单位联系电话')),
                ('EAcompanyAddress', models.CharField(blank=True, max_length=255, null=True, verbose_name='环评单位联系地址')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='项目地址')),
                ('postalCode', models.CharField(blank=True, max_length=6, null=True, verbose_name='邮政编码')),
                ('corporateName', models.CharField(blank=True, max_length=255, null=True, verbose_name='法人代表姓名')),
                ('corporateId', models.CharField(blank=True, max_length=255, null=True, verbose_name='法人身份证')),
                ('constructionScale', models.CharField(blank=True, max_length=50, null=True, verbose_name='项目规模')),
                ('societyCreditcode', models.CharField(blank=True, max_length=20, null=True, verbose_name='统一社会信用代码')),
                ('businessRange', models.CharField(blank=True, max_length=255, null=True, verbose_name='营业执照经营范围')),
                ('contacts', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系人')),
                ('telephone', models.CharField(blank=True, max_length=255, null=True, verbose_name='联系电话')),
                ('totalInvestment', models.FloatField(blank=True, null=True, verbose_name='项目总投资（万元）')),
                ('environmentalProtectionInvestment', models.FloatField(blank=True, null=True, verbose_name='环保投资（万元）')),
                ('floorSpace', models.FloatField(blank=True, null=True, verbose_name='占地面积（m2)')),
                ('managementSpace', models.FloatField(blank=True, null=True, verbose_name='经营面积(m2)')),
                ('nonAccommodationNum', models.IntegerField(blank=True, null=True, verbose_name='职工非住宿人数')),
                ('accommodationNum', models.IntegerField(blank=True, null=True, verbose_name='职工住宿人数')),
                ('dinningNum', models.IntegerField(blank=True, null=True, verbose_name='员工吃饭人数（人）')),
                ('dayWorkTime', models.FloatField(blank=True, null=True, verbose_name='日工作时间')),
                ('yearWorkTime', models.FloatField(blank=True, null=True, verbose_name='年工作时间')),
                ('investmentTime', models.FloatField(blank=True, null=True, verbose_name='投产时间(年)')),
                ('annualPowerConsumption', models.FloatField(null=True, verbose_name='电年耗量(万kwh/a)')),
                ('annualLeftover', models.FloatField(null=True, verbose_name='边角料年产量')),
                ('energyUse', models.CharField(max_length=255, null=True, verbose_name='能源使用情况')),
                ('east', models.CharField(blank=True, max_length=255, null=True, verbose_name='东 ')),
                ('south', models.CharField(blank=True, max_length=255, null=True, verbose_name='南')),
                ('west', models.CharField(blank=True, max_length=255, null=True, verbose_name='西')),
                ('north', models.CharField(blank=True, max_length=255, null=True, verbose_name='北')),
                ('longtitude', models.FloatField(blank=True, null=True, verbose_name='经度')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='纬度')),
                ('township', models.CharField(blank=True, max_length=255, null=True, verbose_name='所在区镇')),
                ('specialOptionForSewageTreatmentWorks', models.CharField(blank=True, max_length=255, null=True, verbose_name='污水处理厂特别选项')),
                ('pollutantHoldingWaterBody', models.CharField(blank=True, max_length=255, null=True, verbose_name='纳污水体')),
                ('surfaceWaterQualityStandard', models.CharField(blank=True, max_length=255, null=True, verbose_name='地表水质量标准')),
                ('surfaceWaterFunction', models.CharField(blank=True, max_length=255, null=True, verbose_name='地表水功能')),
                ('soundEnvironmentStandard', models.CharField(blank=True, max_length=255, null=True, verbose_name='声环境质量标准')),
                ('groundwaterArea', models.CharField(blank=True, max_length=255, null=True, verbose_name='地下水区域')),
                ('groundwaterType', models.CharField(blank=True, max_length=255, null=True, verbose_name='地下水类型')),
                ('groundwaterQualityStandard', models.CharField(blank=True, max_length=255, null=True, verbose_name='地下水质量标准')),
                ('groundwaterBodyNumber', models.CharField(blank=True, max_length=255, null=True, verbose_name='地下水水体编号')),
                ('besideWaterTreatmentPlant', models.CharField(blank=True, max_length=255, null=True, verbose_name='是否污水处理厂纳污范围')),
                ('domesticSewageGo', models.CharField(blank=True, max_length=255, null=True, verbose_name='生活污水去向')),
                ('domesticSewageEnvironmentImpactAnalysis', models.TextField(blank=True, null=True, verbose_name='生活污水环境影响分析')),
                ('domesticSewageEmissionStandards', models.TextField(blank=True, null=True, verbose_name='生活污水排放标准')),
                ('sensitivePointDistance', models.CharField(blank=True, max_length=255, null=True, verbose_name='敏感点距离')),
                ('waterSourceDistance', models.CharField(blank=True, max_length=255, null=True, verbose_name='水源保护地距离')),
                ('energyUsage', models.CharField(blank=True, choices=[('NG', '天然气'), ('LPG', '液化石油气'), ('none', '无')], max_length=255, null=True, verbose_name='能源使用情况')),
                ('product', models.TextField(blank=True, default='[{}]', null=True, verbose_name='产品')),
                ('material', models.TextField(blank=True, default='[{}]', null=True, verbose_name='材料')),
                ('equipment', models.TextField(blank=True, default='[{}]', null=True, verbose_name='设备')),
                ('exhaustGas', models.TextField(blank=True, default='[{}]', null=True, verbose_name='废气信息')),
                ('emissionStandard', models.TextField(default='[{"standard":"","pollutant":"","pollutantOptions":[],"emissionMonitoring":"","maximumAllowableEmissionRate":"","maximumAllowableEmissionConcentration":""}]', null=True, verbose_name='废弃排放标准')),
                ('environmentalEngineering', models.TextField(default='[{"project":"环保工程","content":"","use":""}]', null=True, verbose_name='环保工程')),
                ('otherEngineering', models.TextField(default='[{"project":"主体工程","content":"","use":""},{"project":"储运工程","content":"","use":""},{"project":"辅助工程","content":"","use":""},{"project":"公用工程","content":"","use":""}]', null=True, verbose_name='其他工程')),
                ('sensitiveInfoWater', models.TextField(default='[{"environmentalElements":"水环境","environmentalSensitivePoint":"","orientation":"","distance":"","environmentalObjective":""}]', null=True, verbose_name='水环境')),
                ('sensitiveInfoAtmosphere', models.TextField(default='[{"environmentalElements":"大气环境","orientation":"---","distance":"---","environmentalObjective":"《环境空气质量标准》（GB3095-2012）二级标准"}]', null=True, verbose_name='大气环境')),
                ('sensitiveInfoVoice', models.TextField(default='[{"environmentalElements":"声环境","orientation":"---","distance":"---","environmentalObjective":""}]', null=True, verbose_name='声环境')),
                ('sensitiveInfoReserve', models.TextField(default='[{"environmentalElements":"","orientation":"","distance":"","environmentalObjective":""}]', null=True, verbose_name='居民区环境要素')),
                ('sensitiveInfoHouse', models.TextField(default='[{"environmentalElements":"","orientation":"","distance":"","environmentalObjective":""}]', null=True, verbose_name='水源保护区环境要素')),
                ('noiseMonitoringPoints', models.IntegerField(null=True, verbose_name='噪声监测点数目')),
                ('gasCylinderHeight', models.FloatField(blank=True, null=True, verbose_name='排风筒高度(m)')),
                ('airQuantity', models.FloatField(blank=True, null=True, verbose_name='风量(m3/h)')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_project', to='company.Company')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='文件名')),
                ('fileType', models.CharField(blank=True, choices=[('businessLicenseFile', '营业执照复印件'), ('idCardFile', '法人身份证复印件'), ('workshopLeaseContractFile', '厂房租赁合同复印件'), ('siteUseFile', '场地使用证明复印件'), ('environmentalProtectionCertificate', '环保证'), ('workshopEastImg', '厂址四至图-东'), ('workshopSouthImg', '厂址四至图-南'), ('workshopWestImg', '厂址四至图-西'), ('workshopNorthImg', '厂址四至图-北'), ('processFlowChart', '工艺流程图'), ('planeLayoutChart', '平面布置图'), ('satelliteInformationChart', '卫星信息图')], max_length=255, null=True, verbose_name='文件类型')),
                ('filePath', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(), upload_to=projects.models.ProjectFile.uploadFilePath, verbose_name='文件位置')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectFile', to='projects.Project')),
            ],
        ),
    ]
